`timescale 1ns / 1ps
module IM(reset,A,InstrF);
input reset;
input [31:0]A;
output [31:0]InstrF;
reg[31:0]mem[0:256];
assign InstrF=(reset==0)?32'b0:mem[A];
initial begin 
mem[0]=32'h000042b7;//lui for 4 in x5
mem[1]=32'h00000000;
mem[2]=32'h00000000;
mem[3]=32'h00000000;
mem[4]=32'h00000000;
mem[5]=32'h00000000;
mem[6]=32'h00002337;//lui for 2 in x6
mem[7]=32'h00000000;
mem[8]=32'h00000000;
mem[9]=32'h00000000;
mem[10]=32'h00000000;
mem[11]=32'h00000000;
mem[12]=32'h006283b3;//add x5+x6 in x7
mem[13]=32'h00000000;
mem[14]=32'h00000000;
mem[15]=32'h00000000;
mem[16]=32'h00000000;
mem[17]=32'h00000000;
mem[18]=32'h40628433;//sub x5-x6 in x8
mem[19]=32'h00000000;
mem[20]=32'h00000000;
mem[21]=32'h00000000;
mem[22]=32'h00000000;
mem[23]=32'h00000000;
mem[24]=32'h0083f4b3;//and x7&x8 in x9
mem[25]=32'h00000000;
mem[26]=32'h00000000;
mem[27]=32'h00000000;
mem[28]=32'h00000000;
mem[29]=32'h00000000;
mem[30]=32'h0083e533;//or x7|x8 in x10
mem[31]=32'h00000000;
mem[32]=32'h00000000;
mem[33]=32'h00000000;
mem[34]=32'h00000000;
mem[35]=32'h00000000;
mem[36]=32'hfffff5b7;//lui for fffff in x11
mem[37]=32'h00000000;
mem[38]=32'h00000000;
mem[39]=32'h00000000;
mem[40]=32'h00000000;
mem[41]=32'h00000000;
mem[42]=32'h00b12123;//sw to store fffff into dm2
mem[43]=32'h00000000;
mem[44]=32'h00000000;
mem[45]=32'h00000000;
mem[46]=32'h00000000;
mem[47]=32'h00000000;
mem[48]=32'h00210603;//lb to dm2 to x12 "ff"
mem[49]=32'h00000000;
mem[50]=32'h00000000;
mem[51]=32'h00000000;
mem[52]=32'h00000000;
mem[53]=32'h00000000;
mem[54]=32'h0083c6b3;//xor x7|x8 to x13
mem[55]=32'h00000000;
mem[56]=32'h00000000;
mem[57]=32'h00000000;
mem[58]=32'h00000000;
mem[59]=32'h00000000;
mem[60]=32'h00659733;//sll x11 by x6 in x14
mem[61]=32'h00000000;
mem[62]=32'h00000000;
mem[63]=32'h00000000;
mem[64]=32'h00000000;
mem[65]=32'h00000000;
mem[66]=32'h0065d7b3;//srl x11 by x6 in x15
mem[67]=32'h00000000;
mem[68]=32'h00000000;
mem[69]=32'h00000000;
mem[70]=32'h00000000;
mem[71]=32'h00000000;
mem[72]=32'h4065d833;//srl x11 by x6 in x16
mem[73]=32'h00000000;
mem[74]=32'h00000000;
mem[75]=32'h00000000;
mem[76]=32'h00000000;
mem[77]=32'h00000000;
mem[78]=32'h00438893;//addi x7+4 in x17
mem[79]=32'h00000000;
mem[80]=32'h00000000;
mem[81]=32'h00000000;
mem[82]=32'h00000000;
mem[83]=32'h00000000;
mem[84]=32'h0083a913;//slti x7<8 in x18
mem[85]=32'h00000000;
mem[86]=32'h00000000;
mem[87]=32'h00000000;
mem[88]=32'h00000000;
mem[89]=32'h00000000;
mem[90]=32'h0083b993;//sltiu x7<8 in x19
mem[91]=32'h00000000;
mem[92]=32'h00000000;
mem[93]=32'h00000000;
mem[94]=32'h00000000;
mem[95]=32'h00000000;
mem[96]=32'h0043ca13;//xori x7^4 in x20
mem[97]=32'h00000000;
mem[98]=32'h00000000;
mem[99]=32'h00000000;
mem[100]=32'h00000000;
mem[101]=32'h00000000;
mem[102]=32'h0043ea93;//ori x7|4 in x21
mem[103]=32'h00000000;
mem[104]=32'h00000000;
mem[105]=32'h00000000;
mem[106]=32'h00000000;
mem[107]=32'h00000000;
mem[108]=32'h0023fb13;//andi x7&2 in x22 
mem[109]=32'h00000000;
mem[110]=32'h00000000;
mem[111]=32'h00000000;
mem[112]=32'h00000000;
mem[113]=32'h00000000;
mem[114]=32'h00940a63;//beq x8==x9 then branch to mem124
mem[115]=32'h00000000;
mem[116]=32'h00000000;
mem[117]=32'h00000000;
mem[118]=32'h00000000;
mem[119]=32'h00000000;
//mem[114]=32'h00741a63;//bne x7!=x8 then branch to mem124
//mem[115]=32'h00000000;
//mem[116]=32'h00000000;
//mem[117]=32'h00000000;
//mem[118]=32'h00000000;
//mem[119]=32'h00000000;
//mem[114]=32'h00741a63;//blt x8<x7 then branch to mem124
//mem[115]=32'h00000000;
//mem[116]=32'h00000000;
//mem[117]=32'h00000000;
//mem[118]=32'h00000000;
//mem[119]=32'h00000000;
//mem[114]=32'h0083da63;//bge x7>=x8 then branch to mem124
//mem[115]=32'h00000000;
//mem[116]=32'h00000000;
//mem[117]=32'h00000000;
//mem[118]=32'h00000000;
//mem[119]=32'h00000000;
//mem[114]=32'h00746a63;//bltu x8<x7 then branch to mem124
//mem[115]=32'h00000000;
//mem[116]=32'h00000000;
//mem[117]=32'h00000000;
//mem[118]=32'h00000000;
//mem[119]=32'h00000000;
//mem[114]=32'h0083fa63;//bgeu x7>=x8 then branch to mem124
//mem[115]=32'h00000000;
//mem[116]=32'h00000000;
//mem[117]=32'h00000000;
//mem[118]=32'h00000000;
//mem[119]=32'h00000000;
mem[124]=32'h0023ff93;//andi x7&2 in x31
mem[125]=32'h00000000;
mem[126]=32'h00000000;
mem[127]=32'h00000000;
mem[128]=32'h00000000;
mem[129]=32'h00000000;
end
endmodule
